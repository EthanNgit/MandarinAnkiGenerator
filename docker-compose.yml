services:
  backend:
    container_name: mingxue-server
    image: mingxue-backend
    environment:
      - MD_URL=${MD_URL}
      - MD_USER=${MD_USER}
      - MD_PASSWORD=${MD_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend/serviceAccountKey.json:/config/serviceAccountKey.json:ro
      - ./backend/google_service.json:/config/google_service.json:ro
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
      mariadb:
        condition: service_started
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  tts:
    container_name: mingxue-tts-server
    image: mingxue-tts
    environment:
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_REGION=${AZURE_REGION}
      - GOOGLE_MALE_VOICE=${GOOGLE_MALE_VOICE}
      - GOOGLE_FEMALE_VOICE=${GOOGLE_FEMALE_VOICE}
      - AZURE_MALE_VOICE=${AZURE_MALE_VOICE}
      - AZURE_FEMALE_VOICE=${AZURE_FEMALE_VOICE}
    volumes:
      - ./backend/google_service.json:/config/google_service.json:ro
    build:
      context: ./tts
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    restart: always
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8081/api/v1/health || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
  pinyin-converter:
    container_name: mingxue-pinyin-converter
    image: mingxue-pinyin-converter
    build:
      context: ./pinyin-converter
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    restart: always
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:8082/api/v1/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  mariadb:
    container_name: mingxue-database-mariadb
    image: mariadb:latest
    environment:
      - MYSQL_ROOT_PASSWORD=${MD_ROOT_PASSWORD}
      - MYSQL_DATABASE=mdb
      - MYSQL_USER=${MD_USER}
      - MYSQL_PASSWORD=${MD_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
  elasticsearch:
    container_name: mingxue-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    mem_limit: 1g
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
  azurite:
    container_name: mingxue_azurite
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
    volumes:
      - azurite_data:/data
    environment:
      - AZURITE_ACCOUNTS=devstoreaccount1:Eby8vdM02xNOcqFevkbZzGvAafMNCxF+GB0Wm8w5RkWIFhZ4IRHxuRHIFw==
    command: "azurite-blob --blobHost 0.0.0.0 --loose"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    environment:
      - ELASTICSEARCH_HOSTS=http://mingxue-elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
volumes:
  mariadb_data:
  azurite_data:
